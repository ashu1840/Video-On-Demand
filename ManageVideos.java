
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import com.mashape.unirest.request.HttpRequest;

import java.io.File;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import oracle.jrockit.jfr.JFR;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author officeworks
 */
public class ManageVideos extends javax.swing.JFrame {

    mytablemodel tm;
    ArrayList<Video> al = new ArrayList<>();

    /**
     * Creates new form ManageVideos
     */
    public ManageVideos() {
        initComponents();
        setVisible(true);
        setSize(800, 550);
        setLocation(114, 90);
        cb1_cat.removeAllItems();
        for (int i = 0; i < GlobalData.category.length; i++) {
            cb1_cat.addItem(GlobalData.category[i]);
        }
        // JFileChooser jf=new JFileChooser();

        //ArrayList<Video> al = new ArrayList<>();
        tm = new mytablemodel();
        jt2.setModel(tm);
        //cb2_courses.removeAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_selectcategory = new javax.swing.JLabel();
        lb_selectcourses = new javax.swing.JLabel();
        cb1_cat = new javax.swing.JComboBox<>();
        cb2_courses = new javax.swing.JComboBox<>();
        lb_lecture = new javax.swing.JLabel();
        lb_title = new javax.swing.JLabel();
        tf_title = new javax.swing.JTextField();
        tf_duration = new javax.swing.JLabel();
        tf_dur = new javax.swing.JTextField();
        tf_lecture = new javax.swing.JTextField();
        lb_vid = new javax.swing.JLabel();
        lb_thumbnail = new javax.swing.JLabel();
        tf_vid = new javax.swing.JTextField();
        tf_thumb = new javax.swing.JTextField();
        bt_vid = new javax.swing.JButton();
        bt_thumb = new javax.swing.JButton();
        bt_ad = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt2 = new javax.swing.JTable();
        bt_del = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lb_selectcategory.setText("Select category");
        getContentPane().add(lb_selectcategory);
        lb_selectcategory.setBounds(170, 40, 120, 30);

        lb_selectcourses.setText("Select courses");
        getContentPane().add(lb_selectcourses);
        lb_selectcourses.setBounds(170, 80, 160, 40);

        cb1_cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb1_cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1_catActionPerformed(evt);
            }
        });
        getContentPane().add(cb1_cat);
        cb1_cat.setBounds(330, 40, 330, 30);

        cb2_courses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb2_courses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb2_coursesItemStateChanged(evt);
            }
        });
        getContentPane().add(cb2_courses);
        cb2_courses.setBounds(330, 80, 330, 30);

        lb_lecture.setText("Enter lecture no.");
        getContentPane().add(lb_lecture);
        lb_lecture.setBounds(20, 150, 90, 30);

        lb_title.setText("Enter title");
        getContentPane().add(lb_title);
        lb_title.setBounds(20, 190, 100, 30);
        getContentPane().add(tf_title);
        tf_title.setBounds(150, 190, 120, 50);

        tf_duration.setText("Enter duration");
        getContentPane().add(tf_duration);
        tf_duration.setBounds(20, 244, 100, 30);
        getContentPane().add(tf_dur);
        tf_dur.setBounds(140, 250, 130, 30);
        getContentPane().add(tf_lecture);
        tf_lecture.setBounds(150, 150, 80, 30);

        lb_vid.setText("Select video");
        getContentPane().add(lb_vid);
        lb_vid.setBounds(20, 300, 120, 30);

        lb_thumbnail.setText("Select thumbnail");
        getContentPane().add(lb_thumbnail);
        lb_thumbnail.setBounds(20, 350, 90, 30);
        getContentPane().add(tf_vid);
        tf_vid.setBounds(140, 300, 150, 30);
        getContentPane().add(tf_thumb);
        tf_thumb.setBounds(140, 350, 150, 30);

        bt_vid.setText("browse");
        bt_vid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_vidActionPerformed(evt);
            }
        });
        getContentPane().add(bt_vid);
        bt_vid.setBounds(300, 350, 80, 30);

        bt_thumb.setText("browse");
        bt_thumb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_thumbActionPerformed(evt);
            }
        });
        getContentPane().add(bt_thumb);
        bt_thumb.setBounds(300, 290, 80, 40);

        bt_ad.setBackground(new java.awt.Color(102, 255, 204));
        bt_ad.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bt_ad.setText("Add");
        bt_ad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_adActionPerformed(evt);
            }
        });
        getContentPane().add(bt_ad);
        bt_ad.setBounds(130, 420, 100, 50);

        jt2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jt2);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(460, 170, 300, 200);

        bt_del.setBackground(new java.awt.Color(51, 255, 204));
        bt_del.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bt_del.setText("Delete");
        bt_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_delActionPerformed(evt);
            }
        });
        getContentPane().add(bt_del);
        bt_del.setBounds(500, 410, 240, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb1_catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1_catActionPerformed

        // TODO add your handling code here:
        if (cb1_cat.getSelectedItem() != null) {

            String selection = cb1_cat.getSelectedItem().toString();
            try {
                HttpResponse res = Unirest.get("http://"+GlobalData.host+"/getcourse").queryString("selection", selection).asString();
                StringTokenizer st = new StringTokenizer(res.getBody().toString(), ";");
                cb2_courses.removeAllItems();
                while (st.hasMoreTokens()) {
                    cb2_courses.addItem(st.nextToken());
                }

            } catch (UnirestException ex) {
                //  Logger.getLogger(ManageVideos.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_cb1_catActionPerformed

    private void bt_vidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_vidActionPerformed
        JFileChooser jf = new JFileChooser();
        int y = jf.showOpenDialog(this);
        if (y == JFileChooser.APPROVE_OPTION) {
            File f = jf.getSelectedFile();
            String path1 = f.getPath();
            tf_thumb.setText(path1);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_bt_vidActionPerformed

    private void bt_adActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_adActionPerformed

        new Thread(new jobAdd()).start();
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_adActionPerformed

    class jobAdd implements Runnable {

        @Override
        public void run() {
            try {

                HttpResponse<String> res = Unirest.post("http://"+GlobalData.host+"/addvideos")
                        .queryString("lecture", tf_lecture.getText())
                        .queryString("title", tf_title.getText())
                        .queryString("duration", tf_dur.getText())
                        .queryString("coursename", cb2_courses.getSelectedItem())
                        .field("video", new File(tf_vid.getText()))
                        .field("thumbnail", new File(tf_thumb.getText()))
                        .asString();

                String ans = res.getBody();
                JOptionPane.showMessageDialog(rootPane, ans);

                new Thread(new job()).start();

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }

    private void bt_thumbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_thumbActionPerformed
        JFileChooser jf = new JFileChooser();
        int y = jf.showOpenDialog(this);
        if (y == JFileChooser.APPROVE_OPTION) {
            File f = jf.getSelectedFile();
            String path1 = f.getPath();
            tf_vid.setText(path1);
        }       // TODO add your handling code here:
    }//GEN-LAST:event_bt_thumbActionPerformed

    private void cb2_coursesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb2_coursesItemStateChanged
        new Thread(new job()).start();
        // TODO add your handling code here:
    }//GEN-LAST:event_cb2_coursesItemStateChanged

    private void bt_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_delActionPerformed

        new Thread(new job_delete()).start();
    }//GEN-LAST:event_bt_delActionPerformed

    class job_delete implements Runnable {

        @Override
        public void run() {
            int n = jt2.getSelectedRow();
            if (n == -1) {
                JOptionPane.showMessageDialog(rootPane, "Please select something");
            } else {
                int k = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete?");

                if (k == JOptionPane.YES_OPTION) {
                    try {
                        int videoid = al.get(n).videoid;
                        HttpResponse res = Unirest.get("http://"+GlobalData.host+"/Deletevideoid").queryString("videoid", videoid + "").asString();
                        String result = res.getBody().toString();
                        System.out.println("Response =" + result);
                        if (result.equalsIgnoreCase("success")) {
                            JOptionPane.showMessageDialog(rootPane,"Success");
                            new Thread(new ManageVideos.job()).start();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Failed");
                        }

                        // String name=al.get(n).name;
                    } catch (UnirestException ex) {
                        //Logger.getLogger(Viewcourses.class.getName()).log(Level.SEVERE, null, ex);
                        ex.printStackTrace();
                    }
                }
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageVideos().setVisible(true);
            }
        });
    }

    class mytablemodel extends AbstractTableModel {

        String names[] = {"videoid", "lecturenol", "title", "duration"};

        @Override
        public String getColumnName(int column) {
            return names[column];
        }

        @Override
        public int getRowCount() {
            return al.size();

        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int row, int col) {
            Video c = al.get(row);
            if (col == 0) {
                return c.videoid;
            } else if (col == 1) {
                return c.lecturenol;
            } else if (col == 2) {
                return c.title;
            } else {
                return c.duration;
            }

        }
    }

    class job implements Runnable {

        @Override
        public void run() {
            try {
                HttpResponse<String> httpresponse;

                httpresponse = Unirest.get("http://"+GlobalData.host+"/fetchvideos").queryString("course", cb2_courses.getSelectedItem()).asString();

                System.out.println(httpresponse.getBody());

                StringTokenizer st = new StringTokenizer(httpresponse.getBody(), "~");
                al.clear();
                while (st.hasMoreTokens()) {
                    String video = st.nextToken();
                    //System.out.println(course);
                    StringTokenizer st2 = new StringTokenizer(video, ";");
                    int videoid = Integer.parseInt(st2.nextToken());
                    //System.out.println(name);
                    int lectureno = Integer.parseInt(st2.nextToken());
                    String title = st2.nextToken();
                    //System.out.println(des);
                    //System.out.println(cat);
                    int duration = Integer.parseInt(st2.nextToken());
                    //System.out.println(amount);
                    al.add(new Video(videoid, lectureno, title, duration));

                }
                tm.fireTableDataChanged();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_ad;
    private javax.swing.JButton bt_del;
    private javax.swing.JButton bt_thumb;
    private javax.swing.JButton bt_vid;
    private javax.swing.JComboBox<String> cb1_cat;
    private javax.swing.JComboBox<String> cb2_courses;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt2;
    private javax.swing.JLabel lb_lecture;
    private javax.swing.JLabel lb_selectcategory;
    private javax.swing.JLabel lb_selectcourses;
    private javax.swing.JLabel lb_thumbnail;
    private javax.swing.JLabel lb_title;
    private javax.swing.JLabel lb_vid;
    private javax.swing.JTextField tf_dur;
    private javax.swing.JLabel tf_duration;
    private javax.swing.JTextField tf_lecture;
    private javax.swing.JTextField tf_thumb;
    private javax.swing.JTextField tf_title;
    private javax.swing.JTextField tf_vid;
    // End of variables declaration//GEN-END:variables
}
