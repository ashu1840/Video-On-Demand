
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeRegExp.test;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author officeworks
 */
public class DownloadFrame extends javax.swing.JFrame {

    String vpath;

    /**
     * Creates new form DownloadFrame
     */
    String a;

    public DownloadFrame(String video) {
        initComponents();
        this.vpath = video;
        a = vpath.substring(vpath.lastIndexOf("/") + 1);
        lb_down.setText("Hold on , your file is downloading " + a);
        new Thread(new job_downloading()).start();
        //String b= vpath.substring(vpath.indexOf("/")+1);
        setSize(400, 300);
    }

    class job_downloading implements Runnable {

        @Override
        public void run() {

            // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            try {
                System.out.println("requesting"+vpath);
                HttpResponse<InputStream> httpresponse = Unirest.get("http://"+GlobalData.host+"/GetSource/"+vpath).asBinary();

                //File Download Code
                InputStream is = httpresponse.getBody();

                File f = new File(System.getProperty("user.home") + "/Downloads/");
                f.setWritable(true);
                FileOutputStream fos = new FileOutputStream(f + "/" + a);
                long contentlength = Integer.parseInt(httpresponse.getHeaders().getFirst("Content-Length"));
                byte b[] = new byte[10000];
                int r;
                long count = 0;

                while (true) {
                    r = is.read(b, 0, 10000);
                    fos.write(b, 0, r);
                    count = count + r;
                    int per = (int) (count * 100 / contentlength);
                    pb_down.setValue(per);
                    pb_down.setString(per + "%");
                    if (count == contentlength) {
                        break;
                    }
                }

                JOptionPane.showMessageDialog(rootPane,
                        "File Downloaded....");
                int r1=JOptionPane.showConfirmDialog(rootPane,"do u want to open the downloaded file");
                if(r1==JOptionPane.YES_OPTION)
                {
                    Desktop desktop=Desktop.getDesktop();
                    File file=new File(System.getProperty("user.home")+File.separator+"Downloads"+File.separator+a);
                    desktop.open(file);
                }

            } catch (Exception ex) {
                ex.printStackTrace();

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_down = new javax.swing.JLabel();
        pb_down = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));
        getContentPane().setLayout(null);

        lb_down.setText("Please hold on, Your file is downloading");
        getContentPane().add(lb_down);
        lb_down.setBounds(10, 30, 350, 50);

        pb_down.setStringPainted(true);
        pb_down.setVerifyInputWhenFocusTarget(false);
        getContentPane().add(pb_down);
        pb_down.setBounds(20, 150, 320, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DownloadFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DownloadFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DownloadFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DownloadFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new DownloadFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_down;
    private javax.swing.JProgressBar pb_down;
    // End of variables declaration//GEN-END:variables
}
